<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Event on Pierre Zemb</title>
    <link>https://pierrezemb.fr/tags/event/</link>
    <description>Recent content in Event on Pierre Zemb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2017 Pierre Zemb</copyright>
    <lastBuildDate>Fri, 13 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://pierrezemb.fr/tags/event/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Event-Driven architecture 101</title>
      <link>https://pierrezemb.fr/blog/event-driven-architecture-101/</link>
      <pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://pierrezemb.fr/blog/event-driven-architecture-101/</guid>
      <description>Event-Driven architecture 101 Do your own cover on http://dev.to/rly
tl;dr: Queue messaging are cool. Use them at the core of your architecture.
I’m currently playing a lot around Kafka and Flink at work. I also discovered Vert.x at my local JUG. All three have a common word: events. Event-driven architecture is not something that I learned at school, and I think that’s a shame. It’s really powerful and useful, especially in a world where we speak more and more about “serverless” and “micro services” stuff.</description>
    </item>
    
  </channel>
</rss>